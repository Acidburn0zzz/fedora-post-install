#!/bin/bash

# Install FreeType Freeworld font renderer
function freetype_freeworld {
	# Variables
	NAME="FreeType Freeworld font renderer"
	PACKAGE="freetype-freeworld"
	echo_message title "Installing $NAME..."
	# Check if package is installed
	if [ $(check_packages $PACKAGE; echo $?) = 1 ]; then
		# Install package
		echo_message warning "Package '$PACKAGE' is not installed. Installing..."
		# Add repository in this case RPM Fusion
		REPONAME="RPM Fusion (Free)"
		if (eval `resize` && whiptail \
			--title "Add $REPONAME Repository?" \
			--yesno "The $REPONAME repository is required to install $NAME.\n\nProceed with installation?" \
			10 60) then
			add_rpmfusion "free"
		else
			# Cancelled
			echo_message error "$REPONAME is required for $NAME installation. Aborting..."
			install_fonts
		fi
		# Install package(s)
		elevate_privilege "dnf install -y $PACKAGE"
		# Finished
		echo_message success "Installation of '$PACKAGE' complete."
		whiptail --title "Finished" --msgbox "Installation of $NAME complete." 8 56
		install_fonts
	else
		# Already installed
		echo_message success "$NAME already installed."
		whiptail --title "Finished" --msgbox "$NAME is already installed." 8 56
		install_fonts
	fi
}

# Install preferred fonts
function install_fav_fonts {
	# Update the list of packages in 'data/favs-fonts.list' to suit your preferences
	install_from_list favs-fonts "preferred fonts" install_fonts
}

# Install Fonts
function install_fonts {
	NAME="Fonts"
	echo_message title "Starting $NAME installation..."
	# Draw window
	FONTS=$(eval `resize` && whiptail \
		--notags \
		--title "Install $NAME" \
		--menu "\nWhat would you like to do?" \
		--cancel-button "Go Back" \
		$LINES $COLUMNS $(( $LINES - 12 )) \
		install_fav_fonts	'Install preferred fonts' \
		freetype_freeworld	'Install FreeType Freeworld renderer' \
		3>&1 1>&2 2>&3)
	# check exit status
	if [ $? = 0 ]; then
		echo_message header "Starting '$FONTS' function..."
		$FONTS
	else
		# Cancelled
		echo_message info "$NAME installation cancelled."
		main
	fi
}