#!/bin/bash

# Install Chrome
function download_chrome { 
	# Variables
	REPO="https://dl.google.com/linux/direct"
	PACKAGE=google-chrome-$@
	NAME="Google Chrome ($@)"
	# Check if package is installed
	if [ $(check_packages $PACKAGE; echo $?) = 1 ]; then
		# Install package(s)
		echo_message info "$NAME is not installed. Downloading remote package..."
		# Download RPM file that matches system architecture
		case `uname -i` in
			i386|i486|i586|i686)
				whiptail --title  "No 32-bit packages are available to download." --msgbox "Error." 8 56
				install_thirdparty
				;;
			x86_64)
				elevate_privilege "dnf --nogpgcheck install -y ${REPO}/${PACKAGE}_current_x86_64.rpm"
				;;
			*)
				whiptail --title "Error." --msgbox "No packages available to download." 8 64
				;;
		esac
		# Cleanup and finish
		rm $PACKAGE*.rpm
		# Done
		echo_message success "Installation of '$PACKAGE' complete."
		whiptail --title "Finished" --msgbox "Installation of $NAME complete." 8 64
		status=1
		install_thirdparty
	else
		# Already installed
		echo_message info "$NAME already installed."
		whiptail --title "Finished" --msgbox "$NAME is already installed." 8 64
		install_thirdparty
	fi
}

# Google Chrome
function install_chrome {
	NAME="Google Chrome"
	# Install
	echo_message title "Starting $NAME installation..."
	VERSION=$(eval `resize` && whiptail \
			--title "Google Chrome" \
			--radiolist "Which version of Chrome would you like to install?" \
			--ok-button "Install" \
			--cancel-button "Go Back" \
			$LINES $COLUMNS $(( $LINES - 12 )) \
			"stable"	"Stable build" ON \
			"beta"		"Beta build" OFF \
			"unstable"	"Unstable build" OFF \
			3>&1 1>&2 2>&3)
	if [ $? = 0 ]; then
		case "${VERSION}" in
			stable)
				download_chrome stable
			;;
			beta)
				download_chrome beta
			;;
			unstable)
				download_chrome unstable
			;;
			*)
				install_thirdparty
			;;
		esac
	else
		# Cancelled
		echo_message info 'Installation cancelled.'
		install_thirdparty
	fi
}