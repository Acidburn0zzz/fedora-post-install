#!/bin/bash
#
# Update the list of packages in 'data/purge.list' to suit your preferences
# Listed packages that are are not any system-crucial software to avoid breakage

dir="$(dirname "$0")"

function purge_unused {
	echo_message title "Starting 'purge_unused' function"
	# Check list
	PURGED=$(dirname "$0")'/data/purge.list'
	# Draw window
	if (eval `resize` && whiptail \
		--title "Remove Pre-installed Applications" \
		--yesno "Current list of pre-installed applications to remove: \n\n$(cat $PURGE) \n\nAre you sure you want proceed?" \
		$LINES $COLUMNS $(( $LINES - 12 )) \
		--scrolltext ) then
		echo_message info 'Removing pre-installed applications...'
		# Admin privileges
		elevate_privilege "dnf remove -y $(cat $PURGED)"
		# Done
		echo_message success 'Done.'
		whiptail --title "Finished" --msgbox "Removal of pre-installed packages complete." 8 78
		cleanup
	else
		cleanup
	fi
}

# Remove Orphaned Packages
function remove_orphans {
	echo_message title "Starting 'remove_orphans' function"
	echo_message info 'Removing orphaned packages...'
	# Admin privileges
	elevate_privilege "dnf autoremove -y"
	# Done
	echo_message success 'Done.'
	whiptail --title "Finished" --msgbox "Orphaned packages have been successfully removed." 8 78
	cleanup
}

# Remove Duplicate Packages
function remove_duplicates {
	echo_message title "Starting 'remove_duplicates' function"
	echo_message info 'Removing duplicate packages...'
	# Admin privileges
	elevate_privilege "dnf remove $(dnf repoquery --duplicated --latest-limit -1 -q)"
	# Done
	echo_message success 'Done.'
	whiptail --title "Finished" --msgbox "Duplicate packages have been successfully removed." 8 78
	cleanup
}

# Clean Cache
function clean_cache {
	echo_message title "Starting 'clean_cache' function"
	echo_message info 'Cleaning package cache...'
	# Admin privileges
	elevate_privilege "dnf clean packages"
	# Done
	echo_message success 'Done.'
	whiptail --title "Finished" --msgbox "Package cache has been cleaned." 8 78
	cleanup
}

# Cleanup System
function cleanup {
	eval `resize` 
	CLEANUP=$(whiptail \
		--notags \
		--title "System Cleanup" \
		--menu "\nWhat would you like to do?" \
		--cancel-button "Go Back" \
		$LINES $COLUMNS $(( $LINES - 12 )) \
		clean_cache			'Clean package cache' \
		remove_orphans		'Remove orphaned packages' \
		remove_duplicates	'Remove duplicate packages' \
		purge_unused		'Remove unused pre-installed packages' \
		3>&1 1>&2 2>&3)

	exitstatus=$?
	if [ $exitstatus = 0 ]; then
		$CLEANUP
	else
		main
	fi
}